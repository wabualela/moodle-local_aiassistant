/**
 * AI Assistant Chat Interface
 *
 * @module     local_aiassistant/chat
 * @copyright  2025 Wail Abualela
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_aiassistant/chat",["jquery","core/ajax","core/notification"],(function($,Ajax,Notification){const STORAGE_KEY="local_aiassistant_chat_history";class Chat{constructor(){this.fab=null,this.chatBox=null,this.messagesContainer=null,this.input=null,this.sendButton=null,this.closeButton=null,this.optionsButton=null,this.attachmentButton=null,this.isOpen=!1,this.history=[],this.isSending=!1,this.errorMessage=""}init(){this.fab=document.getElementById("local-aiassistant-fab"),this.chatBox=document.getElementById("local-aiassistant-chat"),this.fab&&this.chatBox?(this.messagesContainer=this.chatBox.querySelector("#local-aiassistant-messages"),this.input=this.chatBox.querySelector("#local-aiassistant-input"),this.sendButton=this.chatBox.querySelector("#local-aiassistant-send"),this.closeButton=this.chatBox.querySelector(".local-aiassistant-chat-close"),this.optionsButton=this.chatBox.querySelector(".local-aiassistant-chat-options"),this.clearButton=this.chatBox.querySelector(".local-aiassistant-chat-clear"),this.attachmentButton=this.chatBox.querySelector(".local-aiassistant-attachment"),this.chatBox&&this.chatBox.dataset&&this.chatBox.dataset.errorGeneric?this.errorMessage=this.chatBox.dataset.errorGeneric:this.errorMessage="An unexpected error occurred. Please try again later.",this.loadHistory(),this.bindEvents(),window.console.log("AI Assistant Chat initialized")):window.console.warn("AI Assistant: Required elements not found")}bindEvents(){this.fab.addEventListener("click",(()=>this.toggleChat())),this.fab.addEventListener("keydown",(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.toggleChat())})),this.closeButton&&this.closeButton.addEventListener("click",(()=>this.closeChat())),this.optionsButton&&this.optionsButton.addEventListener("click",(()=>this.openSettings())),this.clearButton&&this.clearButton.addEventListener("click",(()=>{confirm("Are you sure you want to clear the chat history? This cannot be undone.")&&this.clearHistory()})),this.sendButton&&this.sendButton.addEventListener("click",(()=>this.sendMessage())),this.input&&this.input.addEventListener("keypress",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.sendMessage())})),document.addEventListener("click",(e=>{!this.isOpen||this.chatBox.contains(e.target)||this.fab.contains(e.target)||this.closeChat()})),this.chatBox.addEventListener("click",(e=>{e.stopPropagation()}))}setInputDisabled(disabled){this.input&&(this.input.disabled=disabled),this.sendButton&&(this.sendButton.disabled=disabled),this.attachmentButton&&(this.attachmentButton.disabled=disabled)}toggleChat(){this.isOpen?this.closeChat():this.openChat()}openChat(){this.chatBox.classList.add("is-visible"),this.fab.classList.add("is-hidden"),this.isOpen=!0,this.fab.setAttribute("aria-expanded","true"),this.input&&setTimeout((()=>this.input.focus()),100)}closeChat(){this.chatBox.classList.remove("is-visible"),this.fab.classList.remove("is-hidden"),this.isOpen=!1,this.fab.setAttribute("aria-expanded","false")}openSettings(){const settingsUrl=this.chatBox.getAttribute("data-settingsurl");settingsUrl&&(window.location.href=settingsUrl)}sendMessage(){if(this.isSending)return;const message=this.input.value.trim();if(""===message)return;const historyPayload=this.history.map((entry=>({message:entry.message})));this.addMessage(message,"user"),this.input.value="",this.history.push({sender:"user",message:message}),this.saveHistory(),this.showTypingIndicator(),this.setInputDisabled(!0),this.isSending=!0,Ajax.call([{methodname:"local_aiassistant_get_completion",args:{message:message,history:historyPayload}}])[0].then((response=>{if(window.console.log("AI Response received:",response),response.success){const content=response.formattedmessage||response.message;window.console.log("Adding AI message, renderAsHtml:",Boolean(response.formattedmessage)),this.addMessage(content,"ai",{renderAsHtml:Boolean(response.formattedmessage)}),this.history.push({sender:"ai",message:response.message}),this.saveHistory()}else{window.console.log("AI Response failed:",response.message);const errortext=response.message||this.errorMessage;this.addMessage(errortext,"ai",{isError:!0})}window.console.log("Cleaning up after response"),this.hideTypingIndicator(),this.setInputDisabled(!1),this.isSending=!1,this.input&&this.input.focus()})).catch((error=>{window.console.error("Ajax call failed:",error),Notification.exception(error),this.addMessage(this.errorMessage,"ai",{isError:!0}),window.console.log("Cleaning up after error"),this.hideTypingIndicator(),this.setInputDisabled(!1),this.isSending=!1,this.input&&this.input.focus()}))}addMessage(text,sender){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const renderAsHtml=options.renderAsHtml||!1,isError=options.isError||!1;window.console.log("addMessage called:",{sender:sender,renderAsHtml:renderAsHtml,isError:isError,textLength:text.length});const messageDiv=document.createElement("div");messageDiv.className="local-aiassistant-message local-aiassistant-message-".concat(sender),isError&&messageDiv.classList.add("local-aiassistant-message-error");const contentDiv=document.createElement("div");if(contentDiv.className="local-aiassistant-message-content",renderAsHtml){contentDiv.innerHTML=text;contentDiv.querySelectorAll("script").forEach((script=>script.remove()))}else contentDiv.textContent=text;const timeDiv=document.createElement("div");timeDiv.className="local-aiassistant-message-time",timeDiv.textContent=this.getCurrentTime(),messageDiv.appendChild(contentDiv),messageDiv.appendChild(timeDiv),this.messagesContainer.appendChild(messageDiv),window.console.log("Message added to DOM"),this.scrollToBottom()}showTypingIndicator(){this.hideTypingIndicator();const indicator=document.createElement("div");indicator.className="local-aiassistant-typing-indicator",indicator.id="local-aiassistant-typing",indicator.innerHTML="<span></span><span></span><span></span>",this.messagesContainer.appendChild(indicator),this.scrollToBottom()}hideTypingIndicator(){const indicator=document.getElementById("local-aiassistant-typing");indicator&&indicator.remove()}scrollToBottom(){this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}getCurrentTime(){return(new Date).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}saveHistory(){try{const historyData={history:this.history,timestamp:Date.now()};localStorage.setItem(STORAGE_KEY,JSON.stringify(historyData)),window.console.log("Chat history saved to localStorage")}catch(e){window.console.error("Failed to save chat history:",e)}}loadHistory(){try{const stored=localStorage.getItem(STORAGE_KEY);if(!stored)return void window.console.log("No chat history found in localStorage");const historyData=JSON.parse(stored),now=Date.now(),twentyFourHours=864e5;if(historyData.timestamp&&now-historyData.timestamp>twentyFourHours)return window.console.log("Chat history expired, clearing"),void this.clearHistory();historyData.history&&Array.isArray(historyData.history)&&(this.history=historyData.history,window.console.log("Chat history loaded:",this.history.length,"messages"),this.restoreMessagesToUI())}catch(e){window.console.error("Failed to load chat history:",e),this.clearHistory()}}restoreMessagesToUI(){if(this.history.length>0){const welcomeMessage=this.messagesContainer.querySelector(".local-aiassistant-message-ai");welcomeMessage&&welcomeMessage.remove()}this.history.forEach((entry=>{this.addMessage(entry.message,entry.sender,{renderAsHtml:"ai"===entry.sender,skipHistoryUpdate:!0})})),window.console.log("Restored",this.history.length,"messages to UI")}clearHistory(){try{localStorage.removeItem(STORAGE_KEY),this.history=[],window.console.log("Chat history cleared");this.messagesContainer.querySelectorAll(".local-aiassistant-message").forEach((msg=>{msg.remove()})),window.location.reload()}catch(e){window.console.error("Failed to clear chat history:",e)}}}return{init:function(){$(document).ready((function(){(new Chat).init()}))}}}));

//# sourceMappingURL=chat.min.js.map