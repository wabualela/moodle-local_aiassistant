{"version":3,"file":"admin_assistant.min.js","sources":["../src/admin_assistant.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Admin assistant ID field handler\n *\n * @module     local_aiassistant/admin_assistant\n * @copyright  2025 Wail Abualela\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    /**\n     * Initialize the assistant ID field\n     *\n     * @param {string} fieldId The field ID\n     */\n    function init(fieldId) {\n        const select = document.getElementById(fieldId);\n        const container = document.getElementById('assistant-info-container');\n        const loading = document.getElementById('assistant-loading');\n\n        if (!select || !container || !loading) {\n            return;\n        }\n\n        // Fetch assistants list on page load.\n        fetchAssistantsList(select, container, loading);\n\n        // When assistant is selected, fetch its info.\n        select.addEventListener('change', function() {\n            const assistantId = select.value;\n\n            // Hide containers.\n            container.style.display = 'none';\n\n            if (!assistantId) {\n                return;\n            }\n\n            fetchAssistantInfo(assistantId, container, loading);\n        });\n    }\n\n    /**\n     * Fetch list of assistants from OpenAI\n     *\n     * @param {HTMLSelectElement} select Select element\n     * @param {HTMLElement} infoContainer Info container\n     * @param {HTMLElement} loading Loading indicator\n     */\n    function fetchAssistantsList(select, infoContainer, loading) {\n        // Get the saved value from data attribute\n        const currentValue = select.getAttribute('data-current-value') || '';\n\n        Ajax.call([{\n            methodname: 'local_aiassistant_list_assistants',\n            args: {},\n        }])[0]\n            .then(function(response) {\n                window.console.log('Assistants list response:', response);\n                loading.style.display = 'none';\n\n                if (response.success && response.assistants.length > 0) {\n                    // Clear existing options.\n                    select.innerHTML = '';\n\n                    // Add empty option.\n                    const emptyOption = document.createElement('option');\n                    emptyOption.value = '';\n                    emptyOption.textContent = '-- Select an assistant --';\n                    select.appendChild(emptyOption);\n\n                    // Add assistant options.\n                    response.assistants.forEach(function(assistant) {\n                        const option = document.createElement('option');\n                        option.value = assistant.id;\n                        option.textContent = assistant.name + ' (' + assistant.model + ')';\n                        if (assistant.id === currentValue) {\n                            option.selected = true;\n                        }\n                        select.appendChild(option);\n                    });\n\n                    // If there was a current value, fetch its info.\n                    if (currentValue) {\n                        fetchAssistantInfo(currentValue, infoContainer, loading);\n                    }\n                } else {\n                    window.console.warn('Failed to fetch assistants:', response.error);\n                    select.innerHTML = '';\n                    const option = document.createElement('option');\n                    option.value = '';\n                    option.textContent = response.error || 'No assistants found';\n                    select.appendChild(option);\n\n                    // Show error in info container.\n                    if (response.error) {\n                        infoContainer.innerHTML = '<i class=\"fa fa-exclamation-triangle\"></i> ' + escapeHtml(response.error);\n                        infoContainer.className = 'alert alert-warning';\n                        infoContainer.style.display = 'block';\n                    }\n                }\n            })\n            .catch(function(error) {\n                window.console.error('Error fetching assistants:', error);\n                loading.style.display = 'none';\n                select.innerHTML = '';\n                const option = document.createElement('option');\n                option.value = '';\n                option.textContent = 'Error loading assistants';\n                select.appendChild(option);\n\n                // Show error in info container.\n                infoContainer.innerHTML = '<i class=\"fa fa-exclamation-triangle\"></i> Error: ' +\n                    escapeHtml(error.message || 'Failed to load assistants');\n                infoContainer.className = 'alert alert-danger';\n                infoContainer.style.display = 'block';\n\n                Notification.exception(error);\n            });\n    }\n\n    /**\n     * Fetch assistant info from OpenAI\n     *\n     * @param {string} assistantId Assistant ID\n     * @param {HTMLElement} container Info container\n     * @param {HTMLElement} loading Loading indicator\n     */\n    function fetchAssistantInfo(assistantId, container, loading) {\n        // Show loading.\n        loading.style.display = 'block';\n        container.style.display = 'none';\n\n        Ajax.call([{\n            methodname: 'local_aiassistant_get_assistant_info',\n            args: {\n                assistantid: assistantId,\n            },\n        }])[0]\n            .then(function(response) {\n                loading.style.display = 'none';\n\n                if (response.success) {\n                    // Build info HTML.\n                    let html = '<h5><i class=\"fa fa-robot\"></i> ' + escapeHtml(response.name || 'Unnamed Assistant') + '</h5>';\n\n                    if (response.description) {\n                        html += '<p><strong>Description:</strong> ' + escapeHtml(response.description) + '</p>';\n                    }\n\n                    html += '<p><strong>Model:</strong> ' + escapeHtml(response.model || 'N/A') + '</p>';\n\n                    if (response.tools > 0) {\n                        html += '<p><strong>Tools:</strong> ' + response.tools + ' configured</p>';\n                    }\n\n                    if (response.instructions) {\n                        const shortInstructions = response.instructions.length > 200\n                            ? response.instructions.substring(0, 200) + '...'\n                            : response.instructions;\n                        html += '<p><strong>Instructions:</strong> ' + escapeHtml(shortInstructions) + '</p>';\n                    }\n\n                    container.innerHTML = html;\n                    container.className = 'alert alert-success';\n                    container.style.display = 'block';\n                } else {\n                    container.innerHTML = '<i class=\"fa fa-exclamation-triangle\"></i> ' +\n                        escapeHtml(response.error || 'Failed to fetch assistant info');\n                    container.className = 'alert alert-danger';\n                    container.style.display = 'block';\n                }\n            })\n            .catch(function(error) {\n                loading.style.display = 'none';\n                container.innerHTML = '<i class=\"fa fa-exclamation-triangle\"></i> ' +\n                    escapeHtml(error.message || 'An error occurred');\n                container.className = 'alert alert-danger';\n                container.style.display = 'block';\n                Notification.exception(error);\n            });\n    }\n\n    /**\n     * Escape HTML\n     *\n     * @param {string} text Text to escape\n     * @return {string} Escaped text\n     */\n    function escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Ajax","Notification","fetchAssistantInfo","assistantId","container","loading","style","display","call","methodname","args","assistantid","then","response","success","html","escapeHtml","name","description","model","tools","instructions","length","substring","innerHTML","className","error","catch","message","exception","text","div","document","createElement","textContent","init","fieldId","select","getElementById","infoContainer","currentValue","getAttribute","window","console","log","assistants","emptyOption","value","appendChild","forEach","assistant","option","id","selected","warn","fetchAssistantsList","addEventListener"],"mappings":"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"}